@using Azure.Core
@model IEnumerable<ECommerce.Entities.Product>

@{
    ViewData["Title"] = Model?.FirstOrDefault()?.Category?.Name + " Category"; // Dynamic title
}

<h2>@ViewData["Title"]</h2>

@if (ViewBag.Sizes != null)
{
    <form id="sizeFilterForm" method="get" action="@Url.Action("ProductsByCategory", "Category")">
        <div class="form-group">
            <label for="sizeFilter">Size:</label>
            <select id="sizeFilter" name="sizeId" class="form-control custom-select" onchange="submitForm()">
                <option value="">Select Size</option>
                @foreach (var size in ViewBag.Sizes as List<ECommerce.Entities.Size>)
                {
                    <option value="@size.Id">@size.SizeName</option>
                }
            </select>
        </div>
        <input type="hidden" name="categoryId" value="@ViewBag.CategoryId" />
    </form>
}
<br />

@if (Model != null && Model.Any())
{
    <div class="row">
        @foreach (var product in Model)
        {
            <div class="col-md-3 mb-4">
                <!-- Card width reduced -->
                <div class="card h-100 product-card border-0 shadow">
                    <div class="card-img-container">
                        <img class="card-img-top catStyle" src="@(!string.IsNullOrEmpty(product.ImagePath) ? Url.Content(product.ImagePath) : "~/img/default-product.jpg")" alt="Product Image" data-toggle="modal" data-target="#imageModal-@product.Id" />
                        <div class="magnifier" onclick="openModal('@product.ImagePath')">
                            <i class="fas fa-search"></i> <!-- FontAwesome icon -->
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title text-center">@product.Name</h5>
                        <p class="card-text text-muted text-center">@product.Description</p>
                        <h6 class="text-center text-success">@product.Price.ToString("C", System.Globalization.CultureInfo.GetCultureInfo("en-US"))</h6>                        
                        <p class="text-center">Size: @string.Join(", ", product.ShoppingCartItems.Select(i => i.Size.SizeName))</p> <!-- Display sizes -->
                    </div>
                    <div class="card-footer d-flex justify-content-between bg-white border-0">
                        <a href="#" class="btn btn-outline-primary w-50 mx-1">Add to Cart</a>
                        <a href="@Url.Action("ProductDetails", "Category", new { id = product.Id })" class="btn btn-outline-secondary w-50 mx-1 view-details">View Details</a>

                    </div>
                </div>
            </div>

            <!-- Modal for enlarged image -->
            <div class="modal fade" id="imageModal-@product.Id" tabindex="-1" aria-labelledby="imageModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="imageModalLabel">@product.Name</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <img src="@Url.Content(product.ImagePath)" alt="Enlarged Product Image" class="img-fluid">
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No products available in this category.</p>
}

<style>
    .product-card {
        transition: transform 0.2s, box-shadow 0.2s;
        height: 100%; /* Kartın yüksekliğini içeriğe göre dinamik yapar */
        display: flex;
        flex-direction: column;
    }

    .card-img-container {
        flex: 1; /* Kartın resim kısmını büyütür ve içerik kısmına göre esneklik sağlar */
        height: 200px; /* Resim kısmı için sabit yükseklik */
        overflow: hidden;
    }

    .card-img-top {
        width: 100%;
        height: 100%;
        object-fit: cover; /* Resimlerin kutuya uyum sağlamasını sağlar */
    }

    .card-body {
        flex: 0.3; /* İçerik kısmının kart içinde dinamik olmasını sağlar */
        display: flex;
        flex-direction: column;
        justify-content: center; /* İçeriği ortalar */
    }

    .card-footer {
        display: flex;
        justify-content: space-between;
        padding: 0.5rem; /* Butonların arasındaki boşluğu azaltır */
    }

    .btn {
        font-weight: bold;
        text-transform: uppercase;
        border-radius: 0; /* Butonların köşelerini düzleştirir */
    }

    .view-details {
        color: #007bff;
        text-decoration: none;
    }

        .view-details:hover {
            color: #0056b3;
            text-decoration: underline;
        }

    .custom-select {
        width: 100%;
        max-width: 200px; /* Dropdown'un maksimum genişliğini ayarlar */
        padding: 0.375rem 0.75rem; /* İçerik boşluğunu ayarlar */
        border: 1px solid #ced4da; /* Kenar çizgisi rengi */
        border-radius: 0.25rem; /* Köşe yuvarlama */
        font-size: 0.875rem; /* Yazı boyutu */
        background-color: #ffffff; /* Arka plan rengi */
    }

        .custom-select:focus {
            border-color: #80bdff; /* Odaklandığında kenar rengini değiştirir */
            box-shadow: 0 0 0 0.2rem rgba(38, 143, 255, 0.25); /* Odaklandığında gölge ekler */
        }


    .product-card:hover {
        transform: scale(1.05);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    }

    /* Modal stilini de güncellemek isteyebilirsiniz */
    .modal-content {
        max-width: 100%; /* Modal içeriğinin genişliğini sınırlamaz */
        width: auto; /* Modal genişliğini otomatik yapar */
    }

</style>

<script>
    function submitForm() {
        document.getElementById("sizeFilterForm").submit();
    }

    function openModal(imagePath) {
        // Custom logic for modal if needed
    }
</script>
